// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: service.proto

package live

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x6c, 0x69, 0x76, 0x65, 0x1a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0a, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x73, 0x74, 0x6f,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x84, 0x02, 0x0a, 0x04, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x2c,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x6c, 0x69, 0x76, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x2e, 0x6c, 0x69, 0x76,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6c,
	0x69, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x32, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x75, 0x6c, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x10,
	0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x6c, 0x6c, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x0d, 0x2e, 0x6c,
	0x69, 0x76, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6c, 0x69,
	0x76, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x15, 0x2e, 0x6c,
	0x69, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42, 0x08, 0x5a, 0x06,
	0x2e, 0x3b, 0x6c, 0x69, 0x76, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_service_proto_goTypes = []interface{}{
	(*CreateReq)(nil),       // 0: live.CreateReq
	(*GetPushReq)(nil),      // 1: live.GetPushReq
	(*GetPullReq)(nil),      // 2: live.GetPullReq
	(*StopReq)(nil),         // 3: live.StopReq
	(*GetViewerNumReq)(nil), // 4: live.GetViewerNumReq
	(*CreateRsp)(nil),       // 5: live.CreateRsp
	(*GetPushRsp)(nil),      // 6: live.GetPushRsp
	(*GetPullRsp)(nil),      // 7: live.GetPullRsp
	(*StopRsp)(nil),         // 8: live.StopRsp
	(*GetViewerNumRsp)(nil), // 9: live.GetViewerNumRsp
}
var file_service_proto_depIdxs = []int32{
	0, // 0: live.Live.Create:input_type -> live.CreateReq
	1, // 1: live.Live.GetPushUrl:input_type -> live.GetPushReq
	2, // 2: live.Live.GetPullUrl:input_type -> live.GetPullReq
	3, // 3: live.Live.Stop:input_type -> live.StopReq
	4, // 4: live.Live.GetViewerNum:input_type -> live.GetViewerNumReq
	5, // 5: live.Live.Create:output_type -> live.CreateRsp
	6, // 6: live.Live.GetPushUrl:output_type -> live.GetPushRsp
	7, // 7: live.Live.GetPullUrl:output_type -> live.GetPullRsp
	8, // 8: live.Live.Stop:output_type -> live.StopRsp
	9, // 9: live.Live.GetViewerNum:output_type -> live.GetViewerNumRsp
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_create_proto_init()
	file_push_proto_init()
	file_pull_proto_init()
	file_stop_proto_init()
	file_viewer_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LiveClient is the client API for Live service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LiveClient interface {
	// 创建直播
	Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateRsp, error)
	// 获得推流地址
	GetPushUrl(ctx context.Context, in *GetPushReq, opts ...grpc.CallOption) (*GetPushRsp, error)
	// 获得拉流地址
	GetPullUrl(ctx context.Context, in *GetPullReq, opts ...grpc.CallOption) (*GetPullRsp, error)
	// 停止推流
	Stop(ctx context.Context, in *StopReq, opts ...grpc.CallOption) (*StopRsp, error)
	// 获得在线人数
	GetViewerNum(ctx context.Context, in *GetViewerNumReq, opts ...grpc.CallOption) (*GetViewerNumRsp, error)
}

type liveClient struct {
	cc grpc.ClientConnInterface
}

func NewLiveClient(cc grpc.ClientConnInterface) LiveClient {
	return &liveClient{cc}
}

func (c *liveClient) Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateRsp, error) {
	out := new(CreateRsp)
	err := c.cc.Invoke(ctx, "/live.Live/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveClient) GetPushUrl(ctx context.Context, in *GetPushReq, opts ...grpc.CallOption) (*GetPushRsp, error) {
	out := new(GetPushRsp)
	err := c.cc.Invoke(ctx, "/live.Live/GetPushUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveClient) GetPullUrl(ctx context.Context, in *GetPullReq, opts ...grpc.CallOption) (*GetPullRsp, error) {
	out := new(GetPullRsp)
	err := c.cc.Invoke(ctx, "/live.Live/GetPullUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveClient) Stop(ctx context.Context, in *StopReq, opts ...grpc.CallOption) (*StopRsp, error) {
	out := new(StopRsp)
	err := c.cc.Invoke(ctx, "/live.Live/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveClient) GetViewerNum(ctx context.Context, in *GetViewerNumReq, opts ...grpc.CallOption) (*GetViewerNumRsp, error) {
	out := new(GetViewerNumRsp)
	err := c.cc.Invoke(ctx, "/live.Live/GetViewerNum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LiveServer is the server API for Live service.
type LiveServer interface {
	// 创建直播
	Create(context.Context, *CreateReq) (*CreateRsp, error)
	// 获得推流地址
	GetPushUrl(context.Context, *GetPushReq) (*GetPushRsp, error)
	// 获得拉流地址
	GetPullUrl(context.Context, *GetPullReq) (*GetPullRsp, error)
	// 停止推流
	Stop(context.Context, *StopReq) (*StopRsp, error)
	// 获得在线人数
	GetViewerNum(context.Context, *GetViewerNumReq) (*GetViewerNumRsp, error)
}

// UnimplementedLiveServer can be embedded to have forward compatible implementations.
type UnimplementedLiveServer struct {
}

func (*UnimplementedLiveServer) Create(context.Context, *CreateReq) (*CreateRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedLiveServer) GetPushUrl(context.Context, *GetPushReq) (*GetPushRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPushUrl not implemented")
}
func (*UnimplementedLiveServer) GetPullUrl(context.Context, *GetPullReq) (*GetPullRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPullUrl not implemented")
}
func (*UnimplementedLiveServer) Stop(context.Context, *StopReq) (*StopRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedLiveServer) GetViewerNum(context.Context, *GetViewerNumReq) (*GetViewerNumRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetViewerNum not implemented")
}

func RegisterLiveServer(s *grpc.Server, srv LiveServer) {
	s.RegisterService(&_Live_serviceDesc, srv)
}

func _Live_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/live.Live/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServer).Create(ctx, req.(*CreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Live_GetPushUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPushReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServer).GetPushUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/live.Live/GetPushUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServer).GetPushUrl(ctx, req.(*GetPushReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Live_GetPullUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPullReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServer).GetPullUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/live.Live/GetPullUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServer).GetPullUrl(ctx, req.(*GetPullReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Live_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/live.Live/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServer).Stop(ctx, req.(*StopReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Live_GetViewerNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetViewerNumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServer).GetViewerNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/live.Live/GetViewerNum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServer).GetViewerNum(ctx, req.(*GetViewerNumReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Live_serviceDesc = grpc.ServiceDesc{
	ServiceName: "live.Live",
	HandlerType: (*LiveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Live_Create_Handler,
		},
		{
			MethodName: "GetPushUrl",
			Handler:    _Live_GetPushUrl_Handler,
		},
		{
			MethodName: "GetPullUrl",
			Handler:    _Live_GetPullUrl_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Live_Stop_Handler,
		},
		{
			MethodName: "GetViewerNum",
			Handler:    _Live_GetViewerNum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
